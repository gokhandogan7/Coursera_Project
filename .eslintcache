[{"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\index.js":"1","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\reportWebVitals.js":"2","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MenuComponent.js":"3","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishDetailComponent.js":"4","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\ContactComponent.js":"5","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\promotions.js":"6","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\comments.js":"7","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\App.js":"8","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\configureStore.js":"9","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MainComponent.js":"10","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HomeComponent.js":"11","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HeaderComponent.js":"12","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\FooterComponent.js":"13","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\dishes.js":"14","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\leaders.js":"15","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderComments.js":"16","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\promotions.js":"17","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\comments.js":"18","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\dishes.js":"19","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\leaders.js":"20","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishdetailComponent.js":"21","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\AboutUs.js":"22","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\ActionCreators.js":"23","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\ActionTypes.js":"24","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderCard.js":"25","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\baseUrl.js":"26","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderLeader.js":"27","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderDish.js":"28"},{"size":848,"mtime":1619511952495,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1619511952502,"results":"31","hashOfConfig":"30"},{"size":1530,"mtime":1619975597134,"results":"32","hashOfConfig":"30"},{"size":1602,"mtime":1612521787419,"results":"33","hashOfConfig":"30"},{"size":9129,"mtime":1619511952484,"results":"34","hashOfConfig":"30"},{"size":445,"mtime":1610141060752,"results":"35","hashOfConfig":"30"},{"size":4279,"mtime":1610664328582,"results":"36","hashOfConfig":"30"},{"size":391,"mtime":1619511952480,"results":"37","hashOfConfig":"30"},{"size":556,"mtime":1619511952500,"results":"38","hashOfConfig":"30"},{"size":3021,"mtime":1619511952489,"results":"39","hashOfConfig":"30"},{"size":1113,"mtime":1619511952488,"results":"40","hashOfConfig":"30"},{"size":5726,"mtime":1619879547769,"results":"41","hashOfConfig":"30"},{"size":2664,"mtime":1619511952486,"results":"42","hashOfConfig":"30"},{"size":1336,"mtime":1610142845448,"results":"43","hashOfConfig":"30"},{"size":2382,"mtime":1610140642267,"results":"44","hashOfConfig":"30"},{"size":4315,"mtime":1619511952491,"results":"45","hashOfConfig":"30"},{"size":622,"mtime":1619511952502,"results":"46","hashOfConfig":"30"},{"size":762,"mtime":1619511952498,"results":"47","hashOfConfig":"30"},{"size":600,"mtime":1619511952501,"results":"48","hashOfConfig":"30"},{"size":610,"mtime":1619511952501,"results":"49","hashOfConfig":"30"},{"size":1625,"mtime":1619511952485,"results":"50","hashOfConfig":"30"},{"size":4037,"mtime":1619511952483,"results":"51","hashOfConfig":"30"},{"size":3648,"mtime":1619511952497,"results":"52","hashOfConfig":"30"},{"size":510,"mtime":1619511952497,"results":"53","hashOfConfig":"30"},{"size":1137,"mtime":1619975650661,"results":"54","hashOfConfig":"30"},{"size":65,"mtime":1619974039843,"results":"55","hashOfConfig":"30"},{"size":654,"mtime":1619975705016,"results":"56","hashOfConfig":"30"},{"size":523,"mtime":1619975691472,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"9kd4er",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\index.js",[],["120","121"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\reportWebVitals.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MenuComponent.js",["122"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishDetailComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\ContactComponent.js",["123"],"import {\r\n    Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col,  FormFeedback\r\n} from 'reactstrap';\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { Link } from \"react-router-dom\"\r\nimport * as Yup from \"yup\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport {postFeedback} from \"../redux/ActionCreators\"\r\n\r\n\r\nexport const Contact = (props) => {\r\n    const dispatch=useDispatch()\r\n    const contactUsSchema = Yup.object().shape({\r\n        email: Yup.string().email(\"Invalid Email\").required(\"Email is required!!\"),\r\n        firstName: Yup.string()\r\n            .required(\"Please enter your name.\")\r\n            .min(2, \"Please enter valid name\"),\r\n        lastName: Yup.string()\r\n            .required(\"Please enter your  last name\")\r\n            .min(2, \"Please enter valid name\"),\r\n        feedback: Yup.string()\r\n            .required(\"Please enter your feedback\"),\r\n        telnum: Yup.number()\r\n            .required(\"Please enter your feedback\")\r\n\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            telnum: \"\",\r\n            email: \"\",\r\n            contactType: \"\",\r\n            agree: false,\r\n            feedback: \"\"\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(postFeedback(values))\r\n        },\r\n        validationSchema: contactUsSchema\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>\r\n                        Contact Us\r\n                </BreadcrumbItem>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form onSubmit={formik.handleSubmit}>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"firstname\"\r\n                                    name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    invalid={formik.errors.firstName}\r\n\r\n                                    {...formik.getFieldProps('firstName')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.firstName}</FormFeedback>\r\n                            </Col>\r\n\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    id=\"lastname\"\r\n                                    name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    invalid={formik.errors.lastName}\r\n                                    {...formik.getFieldProps('lastName')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.lastName}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"tel\"\r\n                                    id=\"telnum\"\r\n                                    name=\"telnum\"\r\n                                    invalid={formik.errors.telnum}\r\n                                    placeholder=\"Tel. Num\"\r\n                                    {...formik.getFieldProps('telnum')}\r\n                                />\r\n\r\n                                <FormFeedback>{formik.errors.telnum}</FormFeedback>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"E mail\"\r\n                                    invalid={formik.errors.email}\r\n                                    {...formik.getFieldProps('email')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.email}</FormFeedback>\r\n\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{ size: 6, offset: 2 }}>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input\r\n                                            type=\"checkbox\"\r\n                                            name=\"agree\"\r\n\r\n                                            {...formik.getFieldProps('agree')}\r\n\r\n                                        />{\" \"}\r\n\r\n                                        <strong>May we contact you</strong>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={{ size: 3, offset: 1 }}>\r\n                                <Input type=\"select\" name=\"contactType\" {...formik.getFieldProps('contactType')}>\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Input>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Input\r\n                                    type=\"textarea\"\r\n                                    id=\"message\"\r\n                                    name=\"message\"\r\n                                    placeholder=\"Feedback\"\r\n                                    rows=\"12\"\r\n                                    invalid={formik.errors.feedback}\r\n                                    {...formik.getFieldProps('feedback')}\r\n                                />\r\n                                <FormFeedback>{formik.errors.feedback}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{ size: 10, offset: 2 }}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                               </Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\promotions.js",[],["124","125"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\comments.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\App.js",[],["126","127"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\configureStore.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MainComponent.js",["128","129","130","131","132"],"import { useState, useEffect } from \"react\"\r\nimport { MenuComponent } from './MenuComponent';\r\n\r\nimport { HeaderComponent } from \"./HeaderComponent\";\r\nimport { FooterComponent } from \"./FooterComponent\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HomeComponent } from \"./HomeComponent\";\r\nimport { Contact } from \"./ContactComponent\";\r\nimport { DishdetailComponent } from \"./DishdetailComponent\"\r\nimport About from \"./AboutUs\";\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { fetchDishes, fetchComments, fetchPromos ,fetchLeaders} from \"../redux/ActionCreators\"\r\n\r\n\r\n\r\nfunction Main({location}) {\r\n  const { dishes, leaders, comments, promotions } = useSelector(state => state)\r\n/*   const res= useSelector(state => state)\r\n  console.log(res) */\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDishes())\r\n    dispatch(fetchComments())\r\n    dispatch(fetchPromos())\r\n    dispatch(fetchLeaders())\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  const HomePage = (props) => {\r\n   \r\n    return (\r\n      <HomeComponent\r\n        dish={dishes.dishes.filter(dish => dish.featured)[0]}\r\n        dishesLoading={dishes.isLoading}\r\n        errMess={dishes.errorMessage}\r\n        promotion={promotions.promotions.filter(promo => promo.featured)[0]}\r\n        promosLoading={promotions.isLoading}\r\n        promosErrMess={promotions.errorMessage}\r\n        leader={leaders.leaders.filter(lead => lead.featured)[0]}\r\n        leaderLoading={leaders.isLoading}\r\n        leaderErrMess={leaders.errorMessage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const DishWithId = (props) => {\r\n    \r\n    const {match}=props\r\n    return (\r\n      <DishdetailComponent\r\n        dishesLoading={dishes.isLoading}\r\n        dish={dishes.dishes.filter(dish => dish.id == parseInt(match.params.id, 10))[0]}\r\n        errMess={dishes.errorMessage}\r\n        comments={comments.comments.filter(comment => comment.dishId == parseInt(match.params.id, 10))}\r\n        errMess={comments.errorMessage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const AboutUs = () => {\r\n    return (\r\n      <About leaders={leaders.leaders}\r\n      errMess={leaders.errorMessage} \r\n      leadersLoading={leaders.isLoading}\r\n      \r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeaderComponent />\r\n      <TransitionGroup>\r\n      <CSSTransition key={location.location.key} classNames=\"page\" timeout={300}>\r\n        <Switch  location={location.location}>\r\n\r\n          <Route path=\"/home\" component={HomePage} />\r\n\r\n          <Route exact path=\"/menu\" component={() => <MenuComponent dishes={dishes} />} />\r\n\r\n          <Route path=\"/menu/:id\" component={DishWithId} />\r\n\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n\r\n          <Route exact path=\"/aboutus\" component={AboutUs} />\r\n\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n   \r\n        </CSSTransition>\r\n        </TransitionGroup>\r\n      <FooterComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HomeComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HeaderComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\FooterComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\dishes.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\leaders.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderComments.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\promotions.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\comments.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\dishes.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\leaders.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishdetailComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\AboutUs.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\ActionCreators.js",["133"],"import * as ActionTypes from \"./ActionTypes\";\r\n\r\nimport { baseUrl } from \"../shared/baseUrl\"\r\nimport axios from \"axios\"\r\n\r\nexport const addComment = (comment) => {\r\n \r\n    return {\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n    }\r\n}\r\n\r\nexport const postComment=(dishId, rating, author, comment)=>(dispatch)=>{\r\n \r\n        return axios.post(baseUrl + \"comments\",{\r\n            dishId,rating, author, comment,\r\n            date:new Date().toISOString()\r\n        }).then(res=>dispatch(addComment(res.data)))\r\n        .catch(err=>dispatch(dishesFailed(err.message)))\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return axios.get(baseUrl + \"dishes\")\r\n        .then(res => {\r\n            if (res.statusText == \"OK\") {\r\n                return res\r\n            }else{\r\n                let error=new Error(\"Error\"+res.status+\" :\"+res.statusText)\r\n                error.response=res\r\n                throw error\r\n            }\r\n        },\r\n        error=>{\r\n            let errmess=new Error(error.message)\r\n            throw errmess\r\n        }\r\n\r\n        ).then(res=>dispatch(addDishes(res.data)))\r\n        .catch(err=>dispatch(dishesFailed(err.message)))\r\n\r\n}\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n\r\n})\r\nexport const dishesFailed = (errormessage) => ({\r\n    type: ActionTypes.DISHES_FAIL,\r\n    payload: errormessage\r\n\r\n})\r\n\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return axios.get(baseUrl + \"comments\")\r\n    .then(res=>dispatch(addComments(res.data)))\r\n    .catch(err=>dispatch(commentsFailed(err.message)))\r\n\r\n}\r\n\r\nexport const commentsFailed = (errormessage) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errormessage\r\n\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\n\r\n////promos\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true))\r\n\r\n    return axios.get(baseUrl + \"promotions\")\r\n    .then(res=>dispatch(addPromos(res.data)))\r\n    .catch(err=>dispatch(promosFailed(err)))\r\n\r\n\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n\r\n})\r\nexport const promosFailed = (errormessage) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errormessage\r\n\r\n})\r\n\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true))\r\n\r\n    return axios.get(baseUrl + \"leaders\")\r\n        .then(res=>dispatch(addLeaders(res.data)))\r\n        .catch(err=>dispatch(leadersFailed(err.message)))\r\n\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n\r\n})\r\nexport const leadersFailed = (errormessage) => ({\r\n    type: ActionTypes.LEADERS_FAIL,\r\n    payload: errormessage\r\n\r\n})\r\n\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\n\r\nexport const postFeedback=(values)=>(dispatch)=>{\r\n   \r\n    return axios.post(baseUrl+\"feedback\",{\r\n        ...values,\r\n        date:new Date().toISOString()\r\n    }).then(dispatch())\r\n}\r\n\r\n/* [\r\n    {\r\n      \"firstname\": \"fdas\",\r\n      \"lastname\": \"afds\",\r\n      \"telnum\": \"134113\",\r\n      \"email\": \"dafdads@daffas.dfdafd\",\r\n      \"agree\": true,\r\n      \"contactType\": \"Email\",\r\n      \"message\": \"afadsfds\",\r\n      \"date\": \"2017-12-04T09:41:49.890Z\",\r\n      \"id\": 1\r\n    }\r\n  ] */","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\ActionTypes.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderCard.js",["134"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\baseUrl.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderLeader.js",["135"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderDish.js",["136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":85,"column":25,"nodeType":"147","endLine":85,"endColumn":67},{"ruleId":"137","replacedBy":"148"},{"ruleId":"139","replacedBy":"149"},{"ruleId":"137","replacedBy":"150"},{"ruleId":"139","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"152","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":31,"column":6,"nodeType":"155","endLine":31,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":60,"column":52,"nodeType":"159","messageId":"160","endLine":60,"endColumn":54},{"ruleId":"157","severity":1,"message":"158","line":62,"column":70,"nodeType":"159","messageId":"160","endLine":62,"endColumn":72},{"ruleId":"161","severity":1,"message":"162","line":63,"column":9,"nodeType":"163","endLine":63,"endColumn":40},{"ruleId":"157","severity":1,"message":"158","line":28,"column":32,"nodeType":"159","messageId":"160","endLine":28,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":4,"column":9,"nodeType":"143","messageId":"144","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":3,"column":9,"nodeType":"143","messageId":"144","endLine":3,"endColumn":16},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'baseUrl' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["164"],["165"],["164"],["165"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},[1053,1055],"[dispatch]"]