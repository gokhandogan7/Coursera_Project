[{"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\index.js":"1","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\reportWebVitals.js":"2","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MenuComponent.js":"3","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishDetailComponent.js":"4","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\ContactComponent.js":"5","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\promotions.js":"6","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\comments.js":"7","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\App.js":"8","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\configureStore.js":"9","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MainComponent.js":"10","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\reducer.js":"11","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HomeComponent.js":"12","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HeaderComponent.js":"13","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\AboutComponent.js":"14","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\FooterComponent.js":"15","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\dishes.js":"16","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\leaders.js":"17","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderComments.js":"18","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\promotions.js":"19"},{"size":643,"mtime":1610115908010,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1606241047970,"results":"22","hashOfConfig":"21"},{"size":1233,"mtime":1610227403490,"results":"23","hashOfConfig":"21"},{"size":2176,"mtime":1610664328578,"results":"24","hashOfConfig":"21"},{"size":8298,"mtime":1610365671045,"results":"25","hashOfConfig":"21"},{"size":445,"mtime":1610141060752,"results":"26","hashOfConfig":"21"},{"size":4279,"mtime":1610664328582,"results":"27","hashOfConfig":"21"},{"size":442,"mtime":1610470797185,"results":"28","hashOfConfig":"21"},{"size":205,"mtime":1610664328580,"results":"29","hashOfConfig":"21"},{"size":1696,"mtime":1610471398711,"results":"30","hashOfConfig":"21"},{"size":402,"mtime":1610664328581,"results":"31","hashOfConfig":"21"},{"size":1041,"mtime":1610234177849,"results":"32","hashOfConfig":"21"},{"size":5237,"mtime":1610407712829,"results":"33","hashOfConfig":"21"},{"size":3898,"mtime":1610356924078,"results":"34","hashOfConfig":"21"},{"size":2642,"mtime":1610132310694,"results":"35","hashOfConfig":"21"},{"size":1336,"mtime":1610142845448,"results":"36","hashOfConfig":"21"},{"size":2382,"mtime":1610140642267,"results":"37","hashOfConfig":"21"},{"size":4226,"mtime":1610697074750,"results":"38","hashOfConfig":"21"},{"size":185,"mtime":1610697980376,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9kd4er",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\index.js",[],["83","84"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\reportWebVitals.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MenuComponent.js",[],["85","86"],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\DishDetailComponent.js",["87"],"import React from \"react\";\r\nimport { format as formatDate, parseISO } from \"date-fns\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardText,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const formatter = (date) => {\r\n  return formatDate(parseISO(date), \"MM/dd/yyyy HH:mm\");\r\n};\r\n\r\nconst DishDetail = ({ selectedDish, comments }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div classNme=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/menu\">Menu</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>{selectedDish.name}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h3>{selectedDish.name}</h3>\r\n          </div>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      {selectedDish ? (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n              <CardImg\r\n                width=\"100%\"\r\n                top\r\n                src={selectedDish.image}\r\n                alt={selectedDish.name}\r\n              />\r\n              <CardImgOverlay>\r\n              </CardImgOverlay>\r\n              <CardText>{selectedDish.description}</CardText>\r\n            </Card>\r\n          </div>\r\n\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n            <h3>Comments</h3>\r\n            <hr/>\r\n              {comments?.map((comment) => {\r\n                return (\r\n                  <div className='container' key={comment.comment.id}>\r\n                    <CardText>{comment?.comment}</CardText>\r\n                    <CardText>--{comment?.author} , {formatter(comment?.date)}</CardText> \r\n                    <br />\r\n                  </div>\r\n                );\r\n              })}\r\n               <Button outline onClick={()=>{}}>\r\n                  <span className=\"fa fa-sign-in fa-lg\"></span> Submit Comment\r\n                </Button>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DishDetail;\r\n","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\ContactComponent.js",["88"],"import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Col,\r\n  FormFeedback\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst ContactComponent = (props) => {\r\n\r\n  const SubmitSchema = Yup.object().shape({\r\n    firstname: Yup.string().min(3, \"Too Short!\").max(10, \"Too Long!\").required(),\r\n\r\n    lastname: Yup.string().min(3, \"Too Short!\").max(10, \"Too Long!\").required(),\r\n\r\n    email: Yup.string().email(\"Invalid email\").required(),\r\n    telnum: Yup.number('enter number').required()\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div classNme=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>Contact Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h3>Location Information</h3>\r\n        </div>\r\n        <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n          <h5>Our Address</h5>\r\n          <address>\r\n            121, Clear Water Bay Road\r\n            <br />\r\n            Clear Water Bay, Kowloon\r\n            <br />\r\n            HONG KONG\r\n            <br />\r\n            <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n            <br />\r\n            <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n            <br />\r\n            <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n          </address>\r\n        </div>\r\n        <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n          <h5>Map of our Location</h5>\r\n        </div>\r\n        <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n          <div className=\"btn-group\" role=\"group\">\r\n            <a\r\n              role=\"button\"\r\n              className=\"btn btn-primary\"\r\n              href=\"tel:+85212345678\"\r\n            >\r\n              <i className=\"fa fa-phone\"></i> Call\r\n            </a>\r\n            <a role=\"button\" className=\"btn btn-info\">\r\n              <i className=\"fa fa-skype\"></i> Skype\r\n            </a>\r\n            <a\r\n              role=\"button\"\r\n              className=\"btn btn-success\"\r\n              href=\"mailto:confusion@food.net\"\r\n            >\r\n              <i className=\"fa fa-envelope-o\"></i> Email\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h3>Send Us Your Feedback</h3>\r\n        </div>\r\n        <div className=\"col-12 col-md-9\">\r\n          <Formik\r\n            initialValues={{\r\n              firstname: \"\",\r\n              lastname: \"\",\r\n              telnum: \"\",\r\n              email: \"\",\r\n              agree: false,\r\n              contactType: \"Tel.\",\r\n              message: \"\",\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              setTimeout(() => {\r\n                alert(JSON.stringify(values, null, 2));\r\n                setSubmitting(false);\r\n              }, 400);\r\n            }}\r\n            validationSchema={SubmitSchema}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              isSubmitting,\r\n            }) => (\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"firstname\" md={2}>\r\n                    First Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"firstname\"\r\n                      placeholder=\"First Name\"\r\n                      value={values.firstname}\r\n                      onChange={handleChange}\r\n                      invalid={errors.firstname}\r\n                    />\r\n                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"lastname\" md={2}>\r\n                    Last Name\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"lastname\"\r\n                      placeholder=\"Last Name\"\r\n                      value={values.lastname}\r\n                      onChange={handleChange}\r\n                      invalid={errors.lastname}\r\n                    />\r\n                   <FormFeedback>{errors.lastname}</FormFeedback> \r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"telnum\" md={2}>\r\n                    Telefon Number\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"tel\"\r\n                      id=\"telnum\"\r\n                      name=\"telnum\"\r\n                      placeholder=\"Tel. Num\"\r\n                      value={values.telnum}\r\n                      onChange={handleChange}\r\n                      invalid={errors.telnum}\r\n                    />\r\n                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"email\" md={2}>\r\n                    Email\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email\"\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      invalid={errors.email}\r\n                    />\r\n                    <FormFeedback>{errors.email}</FormFeedback>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 6, offset: 2 }}>\r\n                    <FormGroup check>\r\n                      <Label check>\r\n                        <Input\r\n                          id=\"agree\"\r\n                          type=\"checkbox\"\r\n                          name=\"agree\"\r\n                          checked={values.agree}\r\n                          onChange={handleChange}\r\n                        />{\" \"}\r\n                        <strong>May we contact you?</strong>\r\n                      </Label>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={{ size: 3, offset: 1 }}>\r\n                    <Input\r\n                      id=\"contactType\"\r\n                      type=\"select\"\r\n                      name=\"contactType\"\r\n                      value={values.contactType}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option>Tel.</option>\r\n                      <option>Email</option>\r\n                    </Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Label htmlFor=\"message\" md={2}>\r\n                    Your Feedback\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      id=\"message\"\r\n                      name=\"message\"\r\n                      rows=\"12\"\r\n                      value={values.message}\r\n                      onChange={handleChange}\r\n                    ></Input>\r\n                  </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                  <Col md={{ size: 10, offset: 2 }}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Send Feedback\r\n                    </Button>\r\n                  </Col>\r\n                </FormGroup>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactComponent;\r\n","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\promotions.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\comments.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\App.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\configureStore.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\MainComponent.js",["89","90"],"import React, { useState } from \"react\";\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport About from \"./AboutComponent\"\r\nimport Footer from \"./FooterComponent\";\r\nimport ContactComponent from \"./ContactComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nfunction Main() {\r\n\r\n  const {dishes,promotions,leaders,comments}= useSelector(state => state)\r\n  \r\n\r\n  const HomePage = () => {\r\n    return (\r\n      <Home\r\n        dish={dishes.filter((dish) => dish.featured)}\r\n        promotion={promotions.filter((promotion) => promotion.featured)}\r\n        leader={leaders.filter((leader) => leader.featured)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const DishWithId = ({ match }) => {\r\n    return (\r\n      <DishDetail\r\n        selectedDish={\r\n          dishes.filter(\r\n            (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n          )[0]\r\n        }\r\n        comments={comments.filter((comment)=> comment.dishId===parseInt(match.params.dishId, 10))}\r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/home\" component={HomePage} />\r\n        <Route path=\"/aboutus\" component={() => <About leaders={leaders} />} />\r\n        <Route exact path=\"/menu\" component={() => <Menu dishes={dishes} />} />\r\n        <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n        <Route exact path=\"/contactus\" component={ContactComponent} />\r\n        <Redirect to=\"/home\" />\r\n      </Switch>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\reducer.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HomeComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\HeaderComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\AboutComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\FooterComponent.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\dishes.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\shared\\leaders.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\components\\RenderComments.js",[],"C:\\Users\\gdoga\\Desktop\\GitHub_Projects\\coursera_project\\src\\redux\\promotions.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":75,"column":13,"nodeType":"103","endLine":75,"endColumn":55},{"ruleId":"97","severity":1,"message":"104","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"105","line":9,"column":35,"nodeType":"99","messageId":"100","endLine":9,"endColumn":45},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"no-unused-vars","'CardTitle' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]